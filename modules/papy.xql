module namespace papy='http://www.papy';

declare namespace tei = "http://www.tei-c.org/ns/1.0";

declare function papy:test($node as node(), $model as map(*)) {
    <p>Dummy template output generated by function app:test at {current-dateTime()}. The templating
        function was triggered by the class attribute <code>class="app:test"</code>.</p>
};

declare function papy:getFolder1000($tm as xs:integer) as xs:integer {
    ceiling($tm div 1000)
};

declare function papy:biblioToXml($tm as xs:integer, $author as xs:string, $title as xs:string) as node() {
    <bibl xml:id="b{$tm}">
        <author>{$author}</author>
        <title>{$title}</title>
    </bibl>
};

declare function papy:biblioToHtml($tm as xs:integer, $author as xs:string, $title as xs:string) as node() {
    <li>
                <a href="http://papyri.info/biblio/{$tm}">{$tm}:</a>
                &#32;
                <span class="author">{$author}</span>
                &#32;
                <span class="title">{$title}</span>
                &#32;
                <a href="https://github.com/DCLP/idp.data/blob/dclp/Biblio/{ceiling(xs:integer($tm) div 1000)}/{$tm}.xml">github</a>
            </li>
};

declare function papy:flattenAuthor($author as element()) as xs:string {
    if($author/tei:forename) then
      string-join(($author/tei:surname, $author/tei:forename), ' ')
    else
    ( data($author) )
};